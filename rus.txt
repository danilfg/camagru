Основные инструкции
• Этот проект будет исправляться только людьми. Вам разрешено систематизировать файлы и присваивать им названия по своему усмотрению, но вы должны соблюдать следующие правила.
• Вам нужно будет отправить файл с именем author, содержащий ваш логин и новую строку в корне вашего репозитория.
$> cat -e автор
xlogin $
• Ваше веб-приложение не должно выдавать ошибок, предупреждений или строк журнала на любой консоли, на стороне сервера и на стороне клиента. Тем не менее, из-за отсутствия HTTPS любые ошибки, связанные с getUserMedia (), допускаются.
• Вы должны использовать только язык PHP для создания серверного приложения, используя только стандартную библиотеку.
• На стороне клиента ваши страницы должны использовать HTML, CSS и JavaScript.
• Все фреймворки, микро-фреймворки или библиотеки, которые вы не создаете, полностью запрещены, за исключением фреймворков CSS, для которых запрещенный JavaScript не нужен.
• Вы должны использовать драйвер абстракции PDO для связи с вашей базой данных, которая должна быть запрошена с помощью SQL. Режим ошибки этого драйвера должен быть установлен на PDO :: ERRMODE_EXCEPTION
• Ваше приложение не должно иметь утечек безопасности. Вы должны обработать хотя бы случаи, указанные в обязательной части. Тем не менее, вам рекомендуется глубже позаботиться о безопасности вашего приложения и подумать о конфиденциальности ваших данных!
• Вы можете использовать любой веб-сервер, какой захотите, например Apache, Nginx или даже встроенный веб-сервер1.
.
• Ваше веб-приложение должно быть как минимум совместимо с Firefox (> = 41) и Chrome (> = 46).


Обязательная часть
V.1 Общие особенности
Вы разработаете веб-приложение. Даже если это не требуется, попробуйте структурировать свое приложение (например, как приложение MVC).
Ваш веб-сайт должен иметь приличный макет страницы (имеется в виду как минимум верхний колонтитул, основной раздел и нижний колонтитул), иметь возможность правильно отображаться на мобильных устройствах и иметь адаптированный макет для небольших разрешений.
Все ваши формы должны иметь правильные проверки, и весь сайт должен быть защищен.
Этот пункт ОБЯЗАТЕЛЬНЫЙ и должен быть проверен при оценке вашего приложения. Чтобы иметь представление, вот некоторые вещи, которые НЕ считаются БЕЗОПАСНЫМИ:
• Храните простые или незашифрованные пароли в базе данных.
• Предлагать возможность вставки HTML или «пользовательского» JavaScript в плохо защищенные переменные.
• Предложите возможность загружать нежелательный контент на сервер.
• Предложите возможность изменения SQL-запроса.
• Используйте внешнюю форму для управления так называемыми личными данными.

V.2 Пользовательские функции
• Приложение должно позволять пользователю регистрироваться, запрашивая хотя бы действующий адрес электронной почты, имя пользователя и пароль с минимальным уровнем сложности.
• В конце процесса регистрации пользователь должен подтвердить свою учетную запись с помощью уникальной ссылки, отправленной на адрес электронной почты, указанный в регистрационной форме.
• После этого пользователь сможет подключиться к вашему приложению, используя свое имя пользователя и пароль. Он также должен иметь возможность сообщить приложению, что нужно отправить письмо для повторной инициализации пароля, если он забудет свой пароль.
• Пользователь должен иметь возможность отключиться одним щелчком мыши в любое время на любой странице.
• После подключения пользователь должен изменить свое имя пользователя, адрес электронной почты или пароль.
V.3 Возможности галереи
• Эта часть должна быть общедоступной и должна отображать все изображения, отредактированные всеми пользователями, упорядоченные по дате создания. Он также должен позволять (только) подключенному пользователю ставить лайки и / или комментировать их.
• Когда изображение получает новый комментарий, автор изображения должен быть уведомлен по электронной почте. По умолчанию для этого параметра должно быть установлено значение true, но его можно отключить в настройках пользователя.
• Список изображений должен быть разбит на страницы, по крайней мере, с 5 элементами на странице.


V.4 Функции редактирования
Рисунок V.1: Общее представление о макете страницы редактирования
Эта часть должна быть доступна только пользователям, которые аутентифицированы / подключены и аккуратно отклоняют всех других пользователей, которые пытаются получить к ней доступ без успешного входа в систему.
Эта страница должна содержать 2 раздела:
• Основной раздел, содержащий предварительный просмотр веб-камеры пользователя, список наложенных изображений и кнопку, позволяющую сделать снимок.
• Боковой раздел, в котором отображаются эскизы всех ранее сделанных снимков.
Макет вашей страницы обычно должен выглядеть так, как показано на рисунке V.1.
• Наложение изображений должно быть доступно для выбора, а кнопка, позволяющая сделать снимок, должна быть неактивной (не кликабельной), пока не выбрано наложенное изображение.
• Создание окончательного изображения (среди прочего, наложение двух изображений) должно выполняться на стороне сервера в PHP.
• Поскольку не у всех есть веб-камера, вам следует разрешить загрузку пользовательского изображения вместо того, чтобы снимать его с помощью веб-камеры.
• Пользователь должен иметь возможность удалять свои отредактированные изображения, но только свои, а не творения других пользователей.


V.5 Ограничения и обязательные вещи
Подводя итог, можно сказать, что ваше приложение Убер должно учитывать следующие технологические решения:
• Разрешенные языки:
◦ [Сервер] PHP
◦ [Клиент] HTML - CSS - JavaScript (только с собственным API браузера)
• Авторизованные фреймворки:
◦ [Сервер] Нет
◦ [Клиент] CSS Frameworks допустимы, если он не добавляет запрещенный JavaScript.
Ваш проект обязательно должен содержать:
• Файл index.php, содержащий точку входа на ваш сайт и расположенный в корне вашей файловой иерархии.
• Файл config / setup.php, способный создавать или воссоздавать схему базы данных, используя информацию, содержащуюся в файле config / database.php.
• Файл config / database.php, содержащий конфигурацию вашей базы данных, который будет создан через PDO в следующем формате:
<? php
$ DB_DSN = ...;
$ DB_USER = ...;
$ DB_PASSWORD = ...;
DSN (имя источника данных) содержит необходимую информацию, необходимую для подключения к базе данных, например 'mysql: dbname = testdb; host = 127.0.0.1 ’. Как правило, DSN
состоит из имени драйвера PDO, за которым следует специальный синтаксис для этого драйвера. Дополнительные сведения см. В документации PDO каждого драйвера1.

Глава VI.
Бонусная часть
Если требуемая часть выполнена полностью и безупречно, вы можете добавить любой бонус, который пожелаете; Они будут оценены вашими рецензентами. Однако вы должны по-прежнему соблюдать требования бонусных частей (т.е. обработка изображений должна выполняться на стороне сервера).
Если вам не хватает вдохновения, вот несколько зацепок:
• «AJAXify» обменивается данными с сервером.
• Предложите предварительный просмотр отредактированного результата в реальном времени прямо на превью веб-камеры. Отметим, что это намного проще, чем кажется.
• Сделайте бесконечную разбивку на страницы галерейной части сайта.
• Предложите пользователю возможность делиться своими изображениями в социальных сетях.
• Визуализировать анимированный GIF.


Глава VII.
Оценка и рецензирование
Отправьте свою работу в репозиторий GiT как обычно. Оценивается только работа над вашим репозиторием.
В шкале оцениваются следующие требования. Будьте очень внимательны и внимательно относитесь к ним, так как они будут наказаны 0 (ноль), если не будут соблюдены.
Удачи и не забывай подталкивать!